{"version":3,"file":"js/main.783163323a89.js","mappings":"2cAGO,SAASA,EAAYC,GACxB,MAAMC,EAAoBD,EAAME,KAAI,SAAUC,GAC1C,MAAMC,EAAYD,EAAKE,UAAY,YAAc,GAC3CC,EAAkBH,EAAKE,UAAY,UAAY,GACrD,MAAQ,8BACWF,EAAKI,cAAcH,oGAEAI,sGACqBF,yDAE1CH,EAAKM,yFAI1B,IACAC,SAASC,cAAc,cAAcC,UAAYX,EAAkBY,KAAK,GAC5E,CAOO,SAASC,EAAUC,GACtB,OAAOC,SACHD,EAAQE,QAAQV,IACbQ,EAAQG,WAAWD,QAAQV,IAC3BQ,EAAQG,WAAWA,WAAWD,QAAQV,GAC3C,GACN,CC9BA,IAAIY,E,4IAEG,SAASC,IACZ,OAAOD,CACX,C,aCEO,SAASE,EAAoBC,GAChC,IAAIb,EAAOa,EAAMC,OAAOC,MDDrB,IAAiBrB,ICEZ,CACJI,GAAIkB,KAAKC,MACTjB,KAAMA,EACNJ,WAAW,GDJfc,EAAKQ,KAAKxB,GCMVJ,EAAYqB,KFOZV,SAASC,cAAc,aAAaa,MAAQ,GAYhD,WACI,MAAMI,EAAsBlB,SAASmB,cAAc,OACnDD,EAAoBE,UAAUC,IAAI,QAAS,gBAC3C,gBACAH,EAAoBI,aAAa,OAAQ,SACzCJ,EAAoBhB,UAAY,kBAChCF,SAASuB,KAAKC,YAAYN,GAG1BO,YAAW,WACP,MAAMP,EAAsBlB,SAASC,cAAc,iBACnDiB,EAAoBV,WAAWkB,YAAYR,EAC/C,GAAG,IACP,CAxBIS,EENJ,CCTAC,OAAOC,iBAAiB,QDJjB,WACHxC,EAAYqB,IAChB,ICGAV,SAAS6B,iBAAiB,UAAU,SAAUjB,GACtCA,EAAMC,OAAOO,UAAUU,SAAS,aAChCnB,EAAoBC,EAE5B,IACAZ,SAAS6B,iBAAiB,SAAS,SAAUjB,GDctC,IDhBoBf,EEGnBe,EAAMC,OAAOO,UAAUU,SAAS,WDIjC,SAAgClB,GACnC,MAAMf,EAAKO,EAAUQ,EAAMC,QAC3Bb,SAASC,cAAc,wBAAwBqB,aAAa,UAAWzB,GAC/CkC,EAAAA,GAAMC,oBAC1BhC,SAASiC,eAAe,sBAEZC,MACpB,CCVQC,CAAuBvB,GAEvBA,EAAMC,OAAOO,UAAUU,SAAS,kBDoBjC,SAAiClB,IDpBjC,SAAoBf,EAAIF,GAC3B,MAAMyC,EAAY3B,EAAK4B,WAAU,SAAUvB,GACvC,OAAOA,EAAMjB,KAAOA,CACxB,IACAY,EAAK2B,GAAWzC,UAAYA,CAChC,CCkBI2C,CAFWlC,EAAUQ,EAAMC,QACPD,EAAMC,OAAO0B,SAEjClD,EAAYqB,IAChB,CCxBQ8B,CAAwB5B,GAEJ,wBAApBA,EAAMC,OAAOhB,KFTMA,GCiBZG,SAASiC,eAAe,uBAAuBQ,aAAa,WDhBvEhC,EAAOA,EAAKiC,QAAO,SAAUC,GACzB,OAAOA,EAAK9C,KAAOA,CACvB,ICgBAR,EAAYqB,KACYqB,EAAAA,GAAMC,oBAC1BhC,SAASiC,eAAe,sBAEZW,OCXpB,IAEAC,QAAQC,IAAI,c","sources":["webpack://webpack-template/./src/js/ui.js","webpack://webpack-template/./src/js/data.js","webpack://webpack-template/./src/js/event-handlers.js","webpack://webpack-template/./src/js/index.js"],"sourcesContent":["import CheckmarkImage from \"../../images/checkmark.svg\";\r\n\r\n\r\nexport function renderTodos(todos) {\r\n    const renderedItemArray = todos.map(function (todo) {\r\n        const className = todo.completed ? 'completed' : ''\r\n        const completionClass = todo.completed ? 'checked' : ''\r\n        return `\r\n            <li data-id=\"${todo.id}\" class=\"${className}\">\r\n                <span class=\"custom-checkbox\">\r\n                    <img class=\"check\" src=\"${CheckmarkImage}\" width=\"22\" height=\"22\"></img>\r\n                    <input class=\"real-checkbox\" type=\"checkbox\" ${completionClass} />\r\n                </span>\r\n                <label>${todo.text}</label>\r\n                <span class=\"delete\"></span>\r\n            </li>\r\n        `\r\n    })\r\n    document.querySelector('.todo-list').innerHTML = renderedItemArray.join('')\r\n}\r\n\r\nexport function clearNewTodoInput() {\r\n    document.querySelector('.new-todo').value = ''\r\n    showNotification()\r\n}\r\n\r\nexport function getTodoId(element) {\r\n    return parseInt(\r\n        element.dataset.id\r\n        || element.parentNode.dataset.id\r\n        || element.parentNode.parentNode.dataset.id\r\n    , 10)\r\n}\r\n\r\nfunction showNotification() {\r\n    const notificationElement = document.createElement(\"div\");\r\n    notificationElement.classList.add(\"alert\", \"alert-success\", \r\n    \"notification\");\r\n    notificationElement.setAttribute(\"role\", \"alert\");\r\n    notificationElement.innerHTML = \"Todo item added\";\r\n    document.body.appendChild(notificationElement);\r\n\r\n    // And we are going to remove this div after 2 seconds.\r\n    setTimeout(function () {\r\n        const notificationElement = document.querySelector(\".notification\");\r\n        notificationElement.parentNode.removeChild(notificationElement)\r\n    }, 2000)\r\n}\r\n","import initialTodos from '../todos.json';\r\n\r\nlet data = initialTodos\r\n\r\nexport function getAllTodos() {\r\n    return data\r\n}\r\n\r\nexport function addTodo(todo) {\r\n    data.push(todo)\r\n}\r\n\r\nexport function removeTodo(id) {\r\n    data = data.filter(function (item) {\r\n        return item.id !== id\r\n    })\r\n}\r\n\r\nexport function updateTodo(id, completed) {\r\n    const itemIndex = data.findIndex(function (value) {\r\n        return value.id === id\r\n    })\r\n    data[itemIndex].completed = completed\r\n}\r\n","import { renderTodos, clearNewTodoInput, getTodoId } from './ui';\r\nimport { getAllTodos, addTodo, removeTodo, updateTodo } from './data';\r\nimport { Modal } from \"bootstrap\";\r\n\r\nexport function onLoadEventHandler() {\r\n    renderTodos(getAllTodos())\r\n}\r\n\r\nexport function newTodoEventHandler(event) {\r\n    let text = event.target.value\r\n    addTodo({\r\n        id: Date.now(),\r\n        text: text,\r\n        completed: false\r\n    })\r\n    renderTodos(getAllTodos())\r\n    clearNewTodoInput()\r\n}\r\n\r\nexport function removeTodoEventHandler(event) {\r\n    const id = getTodoId(event.target);\r\n    document.querySelector(\"#modal-delete-button\").setAttribute(\"todo-id\", id);\r\n    const deleteTodoModal = Modal.getOrCreateInstance(\r\n        document.getElementById(\"modal-delete-todo\")\r\n    );\r\n    deleteTodoModal.show();\r\n}\r\n\r\nexport function confirmRemoveEventHandler(event) {\r\n    const id = document.getElementById(\"modal-delete-button\").getAttribute(\"todo-id\");\r\n    removeTodo(+id)\r\n    renderTodos(getAllTodos())\r\n    const deleteTodoModal = Modal.getOrCreateInstance(\r\n        document.getElementById(\"modal-delete-todo\")\r\n    );\r\n    deleteTodoModal.hide();\r\n}\r\n\r\nexport function toggleTodoEventListener(event) {\r\n    const id = getTodoId(event.target)\r\n    const isCompleted = event.target.checked\r\n    updateTodo(id, isCompleted)\r\n    renderTodos(getAllTodos())\r\n}\r\n","import { onLoadEventHandler, newTodoEventHandler, removeTodoEventHandler, toggleTodoEventListener, confirmRemoveEventHandler } from './event-handlers';\r\nimport '../scss/index.scss'\r\n\r\n\r\nexport function renderApp() {\r\n    onLoadEventHandler();\r\n};\r\n\r\nwindow.addEventListener('load', onLoadEventHandler)\r\ndocument.addEventListener('change', function (event) {\r\n    if (event.target.classList.contains('new-todo')) {\r\n        newTodoEventHandler(event)\r\n    }\r\n})\r\ndocument.addEventListener('click', function (event) {\r\n    if (event.target.classList.contains('delete')) {\r\n        removeTodoEventHandler(event)\r\n    }\r\n    if (event.target.classList.contains('real-checkbox')) {\r\n        toggleTodoEventListener(event)\r\n    }\r\n    if (event.target.id === \"modal-delete-button\") {\r\n        confirmRemoveEventHandler(event);\r\n    }\r\n})\r\n\r\nconsole.log('Hello World')"],"names":["renderTodos","todos","renderedItemArray","map","todo","className","completed","completionClass","id","CheckmarkImage","text","document","querySelector","innerHTML","join","getTodoId","element","parseInt","dataset","parentNode","data","getAllTodos","newTodoEventHandler","event","target","value","Date","now","push","notificationElement","createElement","classList","add","setAttribute","body","appendChild","setTimeout","removeChild","showNotification","window","addEventListener","contains","Modal","getOrCreateInstance","getElementById","show","removeTodoEventHandler","itemIndex","findIndex","updateTodo","checked","toggleTodoEventListener","getAttribute","filter","item","hide","console","log"],"sourceRoot":""}